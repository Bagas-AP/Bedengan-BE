basePath: /api/v1
definitions:
  model.PerlengkapanInput:
    properties:
      deskripsi:
        type: string
      harga:
        type: integer
      nama:
        type: string
      stok:
        type: integer
    required:
    - deskripsi
    - harga
    - nama
    - stok
    type: object
  model.User:
    properties:
      city:
        description: Kota tempat tinggal user
        type: string
      email:
        description: Email bersifat unik dan tidak boleh kosong
        type: string
      id:
        type: string
      name:
        description: Name tidak boleh kosong
        type: string
      province:
        description: Provinsi tempat tinggal user
        type: string
      role:
        description: Role merupakan enum yang berisi "admin" dan "user" dan not null
        type: string
    type: object
  model.UserCreate:
    properties:
      city:
        type: string
      confirm_password:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      province:
        type: string
    required:
    - city
    - confirm_password
    - email
    - name
    - password
    - province
    type: object
  model.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.UserUpdate:
    properties:
      city:
        type: string
      name:
        type: string
      province:
        type: string
    type: object
  utils.ErrorResponseData:
    properties:
      data:
        description: 'Example: nil'
      message:
        description: |-
          The error message.
          Example: "Invalid request"
        type: string
    type: object
  utils.SuccessResponseData:
    properties:
      data:
        description: The actual data returned.
      message:
        description: |-
          The success message.
          Example: "success"
        type: string
    type: object
host: api.perkemahanbedengan.com
info:
  contact:
    email: adityarizky1020@gmail.com
    name: Aditya Rizky Ramadhan
  description: |-
    This is API documentation for Islamind. You can use the API with the following hosts:
    - Production: `api.perkemahanbedengan.com`
  title: Islamind API
  version: "1.0"
paths:
  /perlengkapan:
    get:
      consumes:
      - application/json
      description: Menampilkan semua data perlengkapan
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Menampilkan semua data perlengkapan
      tags:
      - Perlengkapan
    post:
      consumes:
      - application/json
      description: Membuat data perlengkapan baru
      parameters:
      - description: Perlengkapan data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PerlengkapanInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Membuat data perlengkapan baru
      tags:
      - Perlengkapan
  /perlengkapan/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus data perlengkapan berdasarkan id
      parameters:
      - description: ID Perlengkapan
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Menghapus data perlengkapan berdasarkan id
      tags:
      - Perlengkapan
    get:
      consumes:
      - application/json
      description: Menampilkan data perlengkapan berdasarkan id
      parameters:
      - description: ID Perlengkapan
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Menampilkan data perlengkapan berdasarkan id
      tags:
      - Perlengkapan
    put:
      consumes:
      - application/json
      description: Memperbarui data perlengkapan berdasarkan id
      parameters:
      - description: ID Perlengkapan
        in: path
        name: id
        required: true
        type: string
      - description: Perlengkapan data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PerlengkapanInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Memperbarui data perlengkapan berdasarkan id
      tags:
      - Perlengkapan
  /user:
    get:
      consumes:
      - application/json
      description: Find user by id
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Find user by id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user data
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Update user data
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Login user
      tags:
      - User
  /user/logout:
    get:
      consumes:
      - application/json
      description: Logout user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Logout user
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Register new user
      tags:
      - User
  /user/resend/{email}:
    get:
      consumes:
      - application/json
      description: Resend email OTP
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Resend email OTP
      tags:
      - User
  /user/verify/{otp}:
    get:
      consumes:
      - application/json
      description: Verify OTP
      parameters:
      - description: OTP
        in: path
        name: otp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.SuccessResponseData'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponseData'
      summary: Verify OTP
      tags:
      - User
swagger: "2.0"
